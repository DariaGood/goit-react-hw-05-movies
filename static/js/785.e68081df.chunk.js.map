{"version":3,"file":"static/js/785.e68081df.chunk.js","mappings":"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","sources":["api/fechApi.js","components/Reviews/Reviews.js"],"sourcesContent":["import axios from 'axios';\n\n\n//https://api.themoviedb.org/3/movie/550?api_key=4e74e3ce82b875f858122cbc5cfec5bf\n\n\n\nconst KEY = '4e74e3ce82b875f858122cbc5cfec5bf';\n\nexport const getMovies = async () => {\n    try {\n const response = await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${KEY}&language=en-US`\n  );\n\n  return response.data.results;\n    } catch (error) {\n     console.log(error);\n   }\n};\n\nexport const getMoviesByQuery = async (query) => {\n    try {\n const response = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=${KEY}&query=${query}&language=en-US`\n      );\n      return response.data.results;\n      \n    } catch (error) {\n     console.log(error);\n   }\n};\n\nexport const fetchMoviesDetails = async (id) => {\n    try {\n const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${KEY}&language=en-US`\n      );\n      return response.data;\n      \n    } catch (error) {\n     console.log(error);\n   }\n}\n\nexport const fetchMoviesCredits = async (id) => {\n    try {\n const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${KEY}&language=en-US`\n  );\n   \n  return response.data.cast;\n    } catch (error) {\n     console.log(error);\n   }\n}\n\n\nexport const fetchMoviesReviews  = async (id) => {\n    try {\n const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${KEY}&language=en-US`\n  );\n  console.log(response.data.results);\n  return response.data.results;\n    } catch (error) {\n     console.log(error);\n   }\n}\n\n\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMoviesReviews } from 'api/fechApi';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n\n  const [reviews, setReviews] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        setLoading(true);\n        const res = await fetchMoviesReviews(movieId);\n        setReviews(res);\n      } catch (error) {\n        setError(error);\n      } finally {\n     setLoading(false);\n    }\n    };\n    fetchReviews();\n  }, [movieId]);\n    \n  return (\n    <>\n      {error && <div>{error}</div>}\n      {loading && 'Loading ...'}\n      <ul>\n        {reviews.map(review => {\n          return (\n            <li key={review.id}>\n              <p>Author: {review.author}</p>\n              <p>{review.content}</p>\n            </li>\n          );\n        })}\n        {reviews.length === 0 && <p>No reviews\n</p>}\n      </ul>\n     \n    </>\n  );\n};\n\nexport default Reviews;"],"names":["KEY","getMovies","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","axios","concat","sent","abrupt","data","results","t0","console","log","stop","apply","arguments","getMoviesByQuery","_ref2","_callee2","query","_context2","_x","fetchMoviesDetails","_ref3","_callee3","id","_context3","_x2","fetchMoviesCredits","_ref4","_callee4","_context4","cast","_x3","fetchMoviesReviews","_ref5","_callee5","_context5","_x4","movieId","useParams","_useState","useState","_useState2","_slicedToArray","reviews","setReviews","_useState3","_useState4","error","setError","_useState5","_useState6","loading","setLoading","useEffect","fetchReviews","res","finish","_jsxs","_Fragment","children","_jsx","map","review","author","content","length"],"sourceRoot":""}